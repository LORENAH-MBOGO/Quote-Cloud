{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/classes/quotes.ts","webpack:///src/app/components/daily-quote/daily-quote.component.ts","webpack:///src/app/components/daily-quote/daily-quote.component.html","webpack:///src/app/components/quote/quote.component.ts","webpack:///src/app/components/quote/quote.component.html","webpack:///src/app/components/vote/vote.component.ts","webpack:///src/app/components/write-quote/write-quote.component.ts","webpack:///src/app/components/write-quote/write-quote.component.html","webpack:///src/app/pipes/date-ago.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","Quotes","names","quote","email","numberOfUpVotes","numberOfDownVotes","timing","DailyQuoteComponent","weekDays","date","Date","today","getDay","dayInString","DailyQuotes","console","log","QuoteComponent","quotes","unshift","toDelete","confirm","splice","i","addNewQuote","VoteComponent","WriteQuoteComponent","newQoute","addQuote","emit","submitQuote","DateAgoPipe","value","args","seconds","Math","floor","intervals","counter","name","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { EmailValidator } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'QouteApp';\n\n  \n  \n}\n","<div class=\"container-fluid\">\n  <div class=\" row navigation \">\n    <h1 id=\"app_logo_txt\"><a href=\"#\">Qoutes Daily.</a></h1>\n  </div>\n</div>\n<div class=\"div_space\"></div>\n<app-daily-quote></app-daily-quote>\n<app-quote></app-quote>\n\n\n\n\n\n  \n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { CommonModule, APP_BASE_HREF, LocationStrategy, HashLocationStrategy} from '@angular/common';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DailyQuoteComponent } from './components/daily-quote/daily-quote.component';\nimport { WriteQuoteComponent } from './components/write-quote/write-quote.component';\nimport { QuoteComponent } from './components/quote/quote.component';\nimport { VoteComponent } from './components/vote/vote.component';\nimport { DateAgoPipe } from './pipes/date-ago.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DailyQuoteComponent,\n    WriteQuoteComponent,\n    QuoteComponent,\n    VoteComponent,\n    DateAgoPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n  ],\n  providers: [],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { VoteComponent } from '../components/vote/vote.component'\n\n\nexport class Quotes {\n    \n    /*public names:string;\n    public quote:string;\n    public email:string;\n    public numberOfUpVotes:number=0;\n    public numberOfDownVotes:number=0;\n    public timing: Date;*/\n\n    constructor(public names:string, public quote:string, public email:string, public numberOfUpVotes:number=0, public numberOfDownVotes:number=0,public timing: Date){\n\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-daily-quote',\n  templateUrl: './daily-quote.component.html',\n  styleUrls: ['./daily-quote.component.css']\n})\nexport class DailyQuoteComponent implements OnInit {\n  weekDays = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\n  date=new Date;\n  today=this.date.getDay()\n  dayInString = this.weekDays[this.today]\n   DailyQuotes= [\n     {\n       'DayOfWeek':'Monday',\n       'DayQuote':'Today is “Make a change” Monday. Take a look at yourself. If you don’t like what you see, then devote yourself to making a change. From taking on healthier habits to learning what is best for you, taking care of yourself is always important.'\n     },\n     {\n      'DayOfWeek':'Tuesday',\n      'DayQuote':'Today is not just Tuesday. It is Transformation Tuesday. That means that success does not just come to you, you have to go out and get it. So what are you waiting for?'\n    },\n    {\n      'DayOfWeek':'Wednesday',\n      'DayQuote':'Today is “walk it off” Wednesday. If something is bothering you, walk it off by taking a walk and getting some fresh air. Then, see if there is anything you can do to resolve this issue. Sometimes, however, all we need is some time to go outside for a walk to get some air. That act alone can help us calm down.'\n    },\n    {\n      'DayOfWeek':'Thursday',\n      'DayQuote':'Today is “Therapy” Thursday. As you get to the end of your work week, think of some therapeutic methods that will help you unwind a little bit. Some ideas include going for a walk to get some fresh air or taking a nice bath with some essential oils.'\n    },\n    {\n      'DayOfWeek':'Friday',\n      'DayQuote':'Stop waiting for Friday, for summer, for someone to fall in love with you, for life. Happiness is achieved when you stop waiting for it and make the most of the moment you are in now.'\n    },\n    {\n      'DayOfWeek':'Saturday',\n      'DayQuote':'It’s not that we spend five days looking forward to just two. It’s that most people do what they enjoy most on those two days. Imagine living a life where every day are your Saturdays and Sundays. Make every day your weekend. Make every day a play-day.'    \n    },\n    {\n      'DayOfWeek':'Sunday',\n      'DayQuote':'On this special Sunday, remember to put a smile on your face and have some fun. Enjoy yourself and go out with your friends and family to show them how much you missed them during the working days.'\n    }\n  ]\n  \n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(\"Day = \" + this.date.getDay());\n  }\n\n}\n","<div class=\"container\">\n\n    <div class=\"jumbotron\">\n        <div class=\"card  text-white bg-dark border-primary\" >\n            <div class=\"card-header border-success\">Qote of the day.</div>\n           <div *ngFor='let DailyQuote of DailyQuotes' >\n              <div *ngIf='DailyQuote.DayOfWeek == dayInString' class=\"card-body\">\n                <h5 class=\"card-title\">Today is : <span class=\"text-primary\">{{DailyQuote.DayOfWeek}}</span></h5>\n                <p class=\"card-text\">\" <span class=\"text-warning\">{{DailyQuote.DayQuote}}</span> \" ❤️</p>\n              </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Quotes } from '../../classes/quotes';\nimport { VoteComponent} from '../vote/vote.component'\n\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.css']\n})\nexport class QuoteComponent implements OnInit {\n\n  /*numberofupvotes: any = VoteComponent.numberOfUpVote;\n  numberOfDownVotes: any = VoteComponent.numberOfDownVote;*/\n\n  quotes:Quotes[]=[\n    new Quotes('Bbaale Philip','To be young is to be ausome.','namugera.philip@gmail.com',1300,330,new Date(2020, 3, 1, 17, 23, 42, 11)),\n    new Quotes('Benita Kafrika','You can search throughout the entire universe for someone who is more deserving of your love and affection than you are yourself, and that person is not to be found anywhere. You yourself, as much as anybody in the entire universe deserve your love and affection.','bkafrika@gmail.com',800,40,new Date(2020, 2, 2, 17, 23, 42, 11)),\n    new Quotes('JudeMartin',\"Issues are never simple. One thing I'm proud of is that very rarely will you hear me simplify the issues.\",'judebbaale@gmail.com',78,9,new Date(2020, 1, 4, 17, 23, 42, 11)),\n    new Quotes('Mackenzie', \"It would be so simple to allow children, when tired of sitting, to rise, and when tired of writing, to desist, and then their bones would not be twisted.\", 'mackenzie@gmail.com',450 ,330,new Date(2020, 2, 4, 17, 23, 42, 11)),\n    new Quotes('Patricia',\"Tramping is too easy with all this money. My days were more exciting when I was penniless and had to forage around for my next meal... I've decided that I'm going to live this life for some time to come. The freedom and simple beauty of it is just too good to pass up.\",'patricia@gmail.com', 467 ,87, new Date(2020, 4, 4, 17, 23, 42, 11)),\n    new Quotes('Rodney Kaneene',\"If you want to be successful, it's just this simple. Know what you are doing. Love what you are doing. And believe in what you are doing.\",'rodney@gmail.com', 300 ,330, new Date(2020, 2, 4, 17, 23, 42, 11)),\n    new Quotes('Sir Faith',\"All the great things are simple, and many can be expressed in a single word: freedom, justice, honor, duty, mercy, hope.\",'faith@gmail.com', 90 ,48, new Date(2019, 11, 4, 17, 23, 42, 11)),\n    new Quotes('Nakato', \"It would be so simple to allow children, when tired of sitting, to rise, and when tired of writing, to desist, and then their bones would not be twisted.\", 'nakato@gmail.com',940 ,23, new Date(2019, 12, 4, 17, 23, 42, 11)),\n    new Quotes('John Githaiga',\"What you do on immigration policy, what you do on education policy, what you do on tax, regulatory, and energy policy, all connects together - and will be based on a simple determination about what will make life better in America for American citizens.\", 'john@gmail.com', 69 ,20, new Date(2019, 4, 4, 17, 23, 42, 11)),\n    new Quotes('Meshak Victor', \"Simplicity is complex. It's never simple to keep things simple. Simple solutions require the most advanced thinking.\",'meshak@gmail.com', 400 ,30, new Date(2019, 12, 4, 17, 23, 42, 11)),\n  ]\n \n  \n\n  addNewQuote(quote){\n    this.quotes.unshift(quote)\n  }\n  \n  quoteDelete(quote){\n    let toDelete = confirm(`Are you sure you want to delete this quote?`)\n    if (toDelete){\n      this.quotes.splice(quote.quote,1);\n    }\n  }\n  \n  likeButtonClick(i){\n    this.quotes[i].numberOfUpVotes++;\n  }\n  dislikeButtonClick(i){\n    this.quotes[i].numberOfDownVotes++;\n  }\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-write-quote (addQuote)=\"addNewQuote($event)\"></app-write-quote>\n<div class=\"container\">  \n\n    <div class=\"card bg-primary text-white text-center p-3 quote_card border-success\" *ngFor='let quote of quotes; let i = index'>\n      <blockquote class=\"blockquote mb-0\">\n        <p>{{quote.quote}}</p>\n        <footer class=\"blockquote-footer text-white\">\n          <small>\n            Author: <cite title=\"Source Title\">{{quote.names}}</cite>\n          </small>\n        </footer>\n      </blockquote>\n  \n      <div class=\"row butoons\">\n        <div class=\"col-4 \">\n          <button type=\"button\" class=\"btn btn-secondary btn-lg delete_btn\" (click)= 'quoteDelete(true)'>Delete</button>\n        </div>\n        <div class=\"col-8\">\n          <!--app-vote></app-vote-->\n          <div class=\"vote_btns\">\n            <div class=\"like_gp\">\n                <button type=\"button\" class=\"btn btn-warning btn-sm up_vote\" (click)=\"likeButtonClick(i)\">Like</button>\n                <span>{{quote.numberOfUpVotes}} </span>\n            </div>\n            <div class=\"dislike_gp\">\n                <button type=\"button\" class=\"btn btn-danger btn-sm down_vote\" (click)=\"dislikeButtonClick(i)\">Dislike</button>\n                <span> {{quote.numberOfDownVotes}} </span>\n            </div>\n        </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <p>{{quote.timing | dateAgo}}</p>\n        </div>\n      </div>\n    </div>\n  \n  </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { QuoteComponent } from 'src/app/components/quote/quote.component'\n\n@Component({\n  selector: 'app-vote',\n  templateUrl: './vote.component.html',\n  styleUrls: ['./vote.component.css']\n})\nexport class VoteComponent implements OnInit {\n\n  /*numberOfUpVote:any =0;\n  numberOfDownVote:any=0;*/\n\n  /*numberOfUpVotes = QuoteComponent.\n  numberOfDownVotes: any = QuoteComponent.quotes;\n \n  likeButtonClick(numberOfDownVote){\n    this.numberOfUpVotes++;\n  }\n  dislikeButtonClick(){\n    this.numberOfDownVotes++;\n  }*/\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Quotes } from '../../classes/quotes';\n\n@Component({\n  selector: 'app-write-quote',\n  templateUrl: './write-quote.component.html',\n  styleUrls: ['./write-quote.component.css']\n})\nexport class WriteQuoteComponent implements OnInit {\n\n  newQoute = new Quotes(\"\",\"\",\"\",0,0,new Date());\n  @Output() addQuote = new EventEmitter<Quotes>();\n\n  submitQuote(){\n    this.addQuote.emit(this.newQoute);\n    this.newQoute = new Quotes(\"\",\"\",\"\",0,0,new Date());\n  }\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"alert alert-secondary text-center\" role=\"alert\">\n        Feeling Inspired or Good. Speak your poetry with a Quote.\n      </div>\n\n    <form (ngSubmit)='submitQuote()' #goalForm='ngForm'>\n        <div class=\"form-row\">\n            <div class=\"col\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Names \" id=\"name\" [(ngModel)]=\"newQoute.names\" name=\"name\" #name='ngModel' required>\n                <div [hidden]=\"name.valid || name.pristine\" class=\"alert alert-danger\">\n                  <p>Name is required</p>\n                  </div>\n                <!--Display {{newQoute.names}}-->\n            </div>\n            <div class=\"col\">\n              <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\" [(ngModel)]=\"newQoute.email\" name=\"email\" #email='ngModel' required>\n              <div [hidden]=\"email.valid || email.pristine\" class=\"alert alert-danger\">\n                <p>Email is required</p>\n              </div>\n            </div>\n        </div>\n        <div class=\"form-group\"><br>\n            <textarea class=\"form-control\" id=\"quote\" rows=\"3\" placeholder=\"What's on your mind.\" [(ngModel)]=\"newQoute.quote\" name=\"quote\" #quote=\"ngModel\" required></textarea>\n            <div [hidden]=\"email.valid || email.pristine\" class=\"alert alert-danger\">\n              <p>Quote is required</p>\n            </div>\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-outline-success btn-lg\">Publish</button>\n\n    </form>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dateAgo'\n})\nexport class DateAgoPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value) {\n        const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\n        if (seconds < 29) // less than 30 seconds ago will show as 'Just now'\n            return 'Just now';\n        const intervals = {\n            'year': 31536000,\n            'month': 2592000,\n            'week': 604800,\n            'day': 86400,\n            'hour': 3600,\n            'minute': 60,\n            'second': 1\n        };\n        let counter;\n        for (const i in intervals) {\n            counter = Math.floor(seconds / intervals[i]);\n            if (counter > 0)\n                if (counter === 1) {\n                    return counter + ' ' + i + ' ago'; // singular (1 day ago)\n                } else {\n                    return counter + ' ' + i + 's ago'; // plural (2 days ago)\n                }\n        }\n    }\n    return value;\n}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}