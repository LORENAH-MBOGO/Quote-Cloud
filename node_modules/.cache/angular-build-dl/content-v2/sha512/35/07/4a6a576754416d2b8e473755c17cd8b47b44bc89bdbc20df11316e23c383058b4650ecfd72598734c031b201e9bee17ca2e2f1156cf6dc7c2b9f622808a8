{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/classes/quotes.ts","webpack:///src/app/components/daily-quote/daily-quote.component.ts","webpack:///src/app/components/daily-quote/daily-quote.component.html","webpack:///src/app/components/quote/quote.component.ts","webpack:///src/app/components/quote/quote.component.html","webpack:///src/app/components/vote/vote.component.ts","webpack:///src/app/components/write-quote/write-quote.component.ts","webpack:///src/app/components/write-quote/write-quote.component.html","webpack:///src/app/highlight.directive.ts","webpack:///src/app/pipes/date-ago.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","Quotes","names","quote","email","numberOfUpVotes","numberOfDownVotes","timing","DailyQuoteComponent","weekDays","date","Date","today","getDay","dayInString","DailyQuotes","console","log","QuoteComponent","quotes","unshift","toDelete","confirm","splice","i","addNewQuote","VoteComponent","WriteQuoteComponent","newQoute","addQuote","emit","submitQuote","HighlightDirective","el","nativeElement","style","backgroundColor","preNum","lastNum","counter","length","upvotes","DateAgoPipe","value","args","seconds","Math","floor","intervals","name","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { EmailValidator } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'QouteApp';\n\n  \n  \n}\n","<div class=\"container-fluid\">\n  <div class=\" row navigation \">\n    <h1 id=\"app_logo_txt\"><a href=\"#\"><a target=\"_top\" href=\"https://flamingtext.com/\" ><img src=\"https://blog.flamingtext.com/blog/2020/11/06/flamingtext_com_1604643119_823690850.png\" border=\"0\" alt=\"Logo Design by FlamingText.com\" title=\"Logo Design by FlamingText.com\"></a></a></h1>\n \n  </div>\n</div>\n<div class=\"div_space\"></div>\n<app-daily-quote></app-daily-quote>\n<app-quote></app-quote>\n\n\n\n\n\n  \n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { CommonModule, APP_BASE_HREF, LocationStrategy, HashLocationStrategy} from '@angular/common';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DailyQuoteComponent } from './components/daily-quote/daily-quote.component';\nimport { WriteQuoteComponent } from './components/write-quote/write-quote.component';\nimport { QuoteComponent } from './components/quote/quote.component';\nimport { VoteComponent } from './components/vote/vote.component';\nimport { DateAgoPipe } from './pipes/date-ago.pipe';\nimport { HighlightDirective } from './highlight.directive';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DailyQuoteComponent,\n    WriteQuoteComponent,\n    QuoteComponent,\n    VoteComponent,\n    DateAgoPipe,\n    HighlightDirective\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n  ],\n  providers: [],\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { VoteComponent } from '../components/vote/vote.component'\n\n\nexport class Quotes {\n    \n    /*public names:string;\n    public quote:string;\n    public email:string;\n    public numberOfUpVotes:number=0;\n    public numberOfDownVotes:number=0;\n    public timing: Date;*/\n\n    constructor(public names:string, public quote:string, public email:string, public numberOfUpVotes:number=0, public numberOfDownVotes:number=0,public timing: Date){\n\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-daily-quote',\n  templateUrl: './daily-quote.component.html',\n  styleUrls: ['./daily-quote.component.css']\n})\nexport class DailyQuoteComponent implements OnInit {\n  weekDays = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday']\n  date=new Date;\n  today=this.date.getDay()\n  dayInString = this.weekDays[this.today]\n   DailyQuotes= [\n     {\n       'DayOfWeek':'Monday',\n       'DayQuote':'Your Monday morning thoughts set the tone for your whole week. See yourself getting stronger, and living a fulfilling, happier & healthier life.'\n     },\n     {\n      'DayOfWeek':'Tuesday',\n      'DayQuote':'On this Tuesday, remember that an attitude is contagious so remember to have a good one.'\n  },\n    {\n      'DayOfWeek':'Wednesday',\n      'DayQuote':'The rules for a happy Wednesday are the same rules for a happy life. We need to work diligently, to stay true to our values and goals, and to respect others and treat them kindly.'\n   },\n    {\n      'DayOfWeek':'Thursday',\n      'DayQuote':'Happy Thursday! Greet your problems and decisions with peace and calm. Use your inner wisdom to evaluate and make smart decisions for yourself! You got this!'\n    },\n    {\n      'DayOfWeek':'Friday',\n      'DayQuote':'It’s Friday! Time to go make stories for Monday.'\n    },\n    {\n      'DayOfWeek':'Saturday',\n      'DayQuote':'Saturdays are a great relief from our stressful life, yet there is something bitter about waiting desperately for the weekend to come and free us from our overwhelming duties. If we want a life well-lived, filled with meaning and joy, we must look at each day as if it were Saturday.'\n    },\n    {\n      'DayOfWeek':'Sunday',\n      'DayQuote':'Ah, Sunday, the day of rest… now THAT IS something to be thankful for! '\n    }\n  ]\n  \n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(\"Day = \" + this.date.getDay());\n  }\n\n}\n","<div class=\"container\">\n\n    <div class=\"jumbotron\">\n        <div class=\"card  text-white bg-dark border-primary\" >\n            <div class=\"card-header border-info\"><a target=\"_top\" href=\"https://flamingtext.com/\" ><img src=\"https://blog.flamingtext.com/blog/2020/11/06/flamingtext_com_1604652011_823690859.png\" border=\"0\" alt=\"Logo Design by FlamingText.com\" title=\"Logo Design by FlamingText.com\"></a>\n            </div>\n           <div *ngFor='let DailyQuote of DailyQuotes' >\n              <div *ngIf='DailyQuote.DayOfWeek == dayInString' class=\"card-body\">\n                <h5 class=\"card-title\">Today is : <span class=\"text-primary\">{{DailyQuote.DayOfWeek}}</span></h5>\n                <p class=\"card-text\">\" <span class=\"text-warning\">{{DailyQuote.DayQuote}}</span> \" ❤️</p>\n              </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { Quotes } from '../../classes/quotes';\nimport { VoteComponent} from '../vote/vote.component'\n\n\n@Component({\n  selector: 'app-quote',\n  templateUrl: './quote.component.html',\n  styleUrls: ['./quote.component.css']\n})\nexport class QuoteComponent implements OnInit {\n\n  /*numberofupvotes: any = VoteComponent.numberOfUpVote;\n  numberOfDownVotes: any = VoteComponent.numberOfDownVote;*/\n\n  quotes:Quotes[]=[\n    new Quotes('Albert Einstein', 'It has become appallingly obvious that our technology has exceeded our humanity.','albei@gmail.com',2000,190,new Date(2020, 3, 1, 17, 23, 42, 11)),\n    new Quotes('Wayne Dyer','Be miserable. Or motivate yourself. Whatever has to be done, It is always your choice.','janvie@gmail.com',9000,400,new Date(2020, 2, 2, 17, 23, 42, 11)),\n    new Quotes('George Lorimer',\"You've got to get up every morning with determination if you're going to go to bed with satisfaction..\",'vancyvanle@gmail.com',780,9,new Date(2020, 1, 4, 17, 23, 42, 11)),\n    new Quotes('John R. Wooden', \"Don't let what you cannot do interfere with what you can do.\", 'rooniey@gmail.com',6750 ,330,new Date(2020, 2, 4, 17, 23, 42, 11)),\n    new Quotes('Napoleon Hill',\"The starting point of all achievement is desire.\",'napoleon@gmail.com', 10000 ,687, new Date(2020, 4, 4, 17, 23, 42, 11)),\n    new Quotes('David Allen',\"If you don’t pay appropriate attention to what has your attention, it will take more of your attention than it deserves.\",'poertia@gmail.com', 4000 ,230, new Date(2020, 2, 4, 17, 23, 42, 11)),\n    new Quotes('Emerson','A great man is always willing to be little.','emerson@gmail.com', 8090 ,248, new Date(2019, 11, 4, 17, 23, 42, 11)),\n    new Quotes('Clive James', \"It is only when they go wrong that machines remind you how powerful they are.\", 'aprat@gmail.com', 969 ,20, new Date(2019, 4, 4, 17, 23, 42, 11)),\n    new Quotes('Bill Gates', \"The advance of technology is based on making it fit in so that you don't really even notice it, so it's part of everyday life.\",'meshak@gmail.com', 5600 ,300, new Date(2019, 12, 4, 17, 23, 42, 11)),\n  ]\n \n  \n\n  addNewQuote(quote){\n    this.quotes.unshift(quote)\n  }\n  \n  quoteDelete(quote){\n    let toDelete = confirm(`Are you sure you want to delete this quote?`)\n    if (toDelete){\n      this.quotes.splice(quote.quote,1);\n    }\n  }\n  \n  likeButtonClick(i){\n    this.quotes[i].numberOfUpVotes++;\n  }\n  dislikeButtonClick(i){\n    this.quotes[i].numberOfDownVotes++;\n  }\n\n  \n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-write-quote (addQuote)=\"addNewQuote($event)\"></app-write-quote>\n<div class=\"container\">  \n\n    <div class=\"card bg-dark text-warning text-center p-3 quote_card border-success\" *ngFor='let quote of quotes; let i = index'>\n      <blockquote class=\"blockquote mb-0\">\n        <p>{{quote.quote}}</p>\n        <footer class=\"blockquote-footer text-white\">\n          <small>\n            Author: <cite title=\"Source Title\">{{quote.names}}</cite>\n          </small>\n        </footer>\n      </blockquote>\n  \n      <div class=\"row butoons\">\n        <div class=\"col-4 \">\n          <button type=\"button\" class=\"btn btn-secondary btn-lg delete_btn\" (click)= 'quoteDelete(true)'>Delete</button>\n        </div>\n        <div class=\"col-8\">\n          <!--app-vote></app-vote-->\n          <div class=\"vote_btns\">\n            <div class=\"like_gp\">\n                <button type=\"button\" class=\"btn btn-warning btn-sm up_vote\" (click)=\"likeButtonClick(i)\">Like</button>\n                <span>{{quote.numberOfUpVotes}} </span>\n            </div>\n            <div class=\"dislike_gp\">\n                <button type=\"button\" class=\"btn btn-danger btn-sm down_vote\" (click)=\"dislikeButtonClick(i)\">Dislike</button>\n                <span> {{quote.numberOfDownVotes}} </span>\n            </div>\n        </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <p>{{quote.timing | dateAgo}}</p>\n        </div>\n      </div>\n    </div>\n  \n  </div>","import { Component, OnInit, Input } from '@angular/core';\nimport { QuoteComponent } from 'src/app/components/quote/quote.component'\n\n@Component({\n  selector: 'app-vote',\n  templateUrl: './vote.component.html',\n  styleUrls: ['./vote.component.css']\n})\nexport class VoteComponent implements OnInit {\n\n  /*numberOfUpVote:any =0;\n  numberOfDownVote:any=0;*/\n\n  /*numberOfUpVotes = QuoteComponent.\n  numberOfDownVotes: any = QuoteComponent.quotes;\n \n  likeButtonClick(numberOfDownVote){\n    this.numberOfUpVotes++;\n  }\n  dislikeButtonClick(){\n    this.numberOfDownVotes++;\n  }*/\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Quotes } from '../../classes/quotes';\n\n@Component({\n  selector: 'app-write-quote',\n  templateUrl: './write-quote.component.html',\n  styleUrls: ['./write-quote.component.css']\n})\nexport class WriteQuoteComponent implements OnInit {\n\n  newQoute = new Quotes(\"\",\"\",\"\",0,0,new Date());\n  @Output() addQuote = new EventEmitter<Quotes>();\n\n  submitQuote(){\n    this.addQuote.emit(this.newQoute);\n    this.newQoute = new Quotes(\"\",\"\",\"\",0,0,new Date());\n  }\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"alert -alert-secondary text-bold text-center\" role=\"alert\">\n    <a target=\"_top\" href=\"https://flamingtext.com/\" ><img src=\"https://blog.flamingtext.com/blog/2020/11/06/flamingtext_com_1604651316_823690854.png\" border=\"0\" alt=\"Logo Design by FlamingText.com\" title=\"Logo Design by FlamingText.com\"></a><a target=\"_top\" href=\"https://flamingtext.com/\" ><img src=\"https://blog.flamingtext.com/blog/2020/11/06/flamingtext_com_1604651371_823690855.png\" border=\"0\" alt=\"Logo Design by FlamingText.com\" title=\"Logo Design by FlamingText.com\"></a>\n    <a target=\"_top\" href=\"https://flamingtext.com/\" ><img src=\"https://blog.flamingtext.com/blog/2020/11/06/flamingtext_com_1604651415_823690856.png\" border=\"0\" alt=\"Logo Design by FlamingText.com\" title=\"Logo Design by FlamingText.com\"></a> \n      </div>\n\n    <form (ngSubmit)='submitQuote()' #goalForm='ngForm'>\n        <div class=\"form-row bg-info\">\n            <div class=\"col\">\n                <input type=\"text\" class=\"form-control\" placeholder=\"Names \" id=\"name\" [(ngModel)]=\"newQoute.names\" name=\"name\" #name='ngModel' required>\n                <div [hidden]=\"name.valid || name.pristine\" class=\"alert alert-danger\">\n                  <p>Name is required</p>\n                  </div>\n                <!--Display {{newQoute.names}}-->\n            </div>\n            <div class=\"col\">\n              <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\" [(ngModel)]=\"newQoute.email\" name=\"email\" #email='ngModel' required>\n              <div [hidden]=\"email.valid || email.pristine\" class=\"alert alert-danger\">\n                <p>Email is required</p>\n              </div>\n            </div>\n        </div>\n        <div class=\"form-group\"><br>\n            <textarea class=\"form-control\" id=\"quote\" rows=\"3\" placeholder=\"What's on your mind.\" [(ngModel)]=\"newQoute.quote\" name=\"quote\" #quote=\"ngModel\" required></textarea>\n            <div [hidden]=\"email.valid || email.pristine\" class=\"alert alert-danger\">\n              <p>Quote is required</p>\n            </div>\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-outline-success btn-lg\">Publish</button>\n\n    </form>","import { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective {\n  preNum: any;\n  lastNum: any;\n  counter: number;\n  quotes: any;\n  highestUpvote(){\n    this.preNum = 0\n    this.lastNum = 0\n\n    for(this.counter=0 ; this.counter < this.quotes.length; this.counter++) {\n      this.lastNum = this.quotes[this.counter].upvotes;\n      if(this.lastNum > this.preNum){this.preNum = this.lastNum}\n    }\n    return  this.preNum\n  }\n\n    constructor(el: ElementRef) {\n       el.nativeElement.style.backgroundColor = 'blue';\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'dateAgo'\n})\nexport class DateAgoPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value) {\n        const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\n        if (seconds < 29) // less than 30 seconds ago will show as 'Just now'\n            return 'Just now';\n        const intervals = {\n            'year': 31536000,\n            'month': 2592000,\n            'week': 604800,\n            'day': 86400,\n            'hour': 3600,\n            'minute': 60,\n            'second': 1\n        };\n        let counter;\n        for (const i in intervals) {\n            counter = Math.floor(seconds / intervals[i]);\n            if (counter > 0)\n                if (counter === 1) {\n                    return counter + ' ' + i + ' ago'; // singular (1 day ago)\n                } else {\n                    return counter + ' ' + i + 's ago'; // plural (2 days ago)\n                }\n        }\n    }\n    return value;\n}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}